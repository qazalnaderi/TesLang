
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQEQNEQleftGREATER_THANLESS_THANGTEQLTEQleftPLUSMINUSleftMULTIPLYDIVIDErightNOTrightQMARKCOLONnonassocIFXnonassocELSEAND AS BEGIN BOOL COLON COLON_COLON COMMA DIVIDE DO ELSE END EQEQ EQUAL FALSE FOR FUNK GREATER_THAN GTEQ ID IF INT LCURLYEBR LDBLBR LEN LESS_THAN LPAREN LSQBR LSQUAREBR LTEQ MINUS MSTR MSTRING MULTIPLY NEQ NOT NULL NUMBER OR PLUS PRINT QMARK QUESTION RCURLYEBR RDBLBR RETURN RETURN_ARROW RPAREN RSQUAREBR SEMI_COLON STR STRING TO TRUE VECTOR WHILEprog : func_listfunc_list : func\n                     | func func_list\n                     | func : FUNK ID LPAREN flist RPAREN LESS_THAN type GREATER_THAN LCURLYEBR body RCURLYEBRfunc : FUNK ID LPAREN flist RPAREN LESS_THAN type GREATER_THAN RETURN_ARROW expr SEMI_COLONfunc : errorbody : stmt_liststmt_list : stmt\n                     | stmt stmt_list\n                     | stmt : expr SEMI_COLONstmt : expr EQUAL expr SEMI_COLONstmt : defvar SEMI_COLONdefvar : ID COLON_COLON type\n                | ID COLON_COLON type EQUAL exprstmt : PRINT expr SEMI_COLONstmt : IF LDBLBR expr RDBLBR stmt %prec IFXstmt : IF LPAREN expr RPAREN stmt ELSE stmtstmt : WHILE LPAREN expr RPAREN stmtstmt : DO stmt WHILE LPAREN expr RPAREN SEMI_COLONstmt : FOR LPAREN ID EQUAL expr TO expr RPAREN stmtstmt : BEGIN body ENDstmt : RETURN expr SEMI_COLONflist : \n                 | ID AS type\n                 | ID AS type COMMA flistclist : expr\n                 | expr COMMA clisttype : INT\n                | VECTOR\n                | STR\n                | MSTR\n                | BOOL\n                | NULLexpr : expr LSQUAREBR expr RSQUAREBRexpr : LSQUAREBR clist RSQUAREBRexpr : expr QMARK expr COLON exprexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr MULTIPLY expr\n                | expr DIVIDE expr\n                | expr GREATER_THAN expr\n                | expr LESS_THAN expr\n                | expr EQEQ expr\n                | expr GTEQ expr\n                | expr LTEQ expr\n                | expr NEQ expr\n                | expr OR expr\n                | expr AND exprexpr : NOT exprexpr : ID LPAREN expr RPARENexpr : ID LPAREN clist RPARENexpr : IDexpr : NUMBERexpr : STRING\n                | MSTRINGexpr : TRUE\n                | FALSEexpr : NULLexpr : LPAREN expr RPAREN'
    
_lr_action_items = {'$end':([0,1,2,3,5,6,54,84,],[-4,0,-1,-2,-7,-3,-5,-6,]),'FUNK':([0,3,5,54,84,],[4,4,-7,-5,-6,]),'error':([0,3,5,54,84,],[5,5,-7,-5,-6,]),'ID':([4,8,21,25,26,28,31,34,37,39,40,41,42,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,78,104,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[7,9,9,27,49,49,27,49,27,27,49,49,49,49,-12,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-14,49,49,49,109,-17,-23,-24,49,49,-13,49,27,27,27,49,49,-18,-20,27,49,-19,-21,27,-22,]),'LPAREN':([7,25,26,27,28,31,34,35,36,37,38,39,40,41,42,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,104,108,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[8,28,28,51,28,28,28,75,76,28,78,28,28,28,28,51,28,-12,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-14,28,28,28,-17,123,-23,-24,28,28,-13,28,28,28,28,28,28,-18,-20,28,28,-19,-21,28,-22,]),'RPAREN':([8,10,13,14,15,16,17,18,19,21,23,43,44,45,46,47,48,49,53,82,83,85,86,88,92,93,94,95,96,97,98,99,100,101,102,103,106,107,112,114,115,118,125,127,131,138,],[-25,12,-26,-30,-31,-32,-33,-34,-35,-25,-27,-55,-56,-57,-58,-59,-60,-54,88,-28,-51,114,115,-61,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,121,122,-37,-52,-53,-36,-29,-38,134,139,]),'AS':([9,],[11,]),'INT':([11,20,52,],[14,14,14,]),'VECTOR':([11,20,52,],[15,15,15,]),'STR':([11,20,52,],[16,16,16,]),'MSTR':([11,20,52,],[17,17,17,]),'BOOL':([11,20,52,],[18,18,18,]),'NULL':([11,20,25,26,28,31,34,37,39,40,41,42,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,104,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[19,19,48,48,48,48,48,48,48,48,48,48,48,19,-12,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-14,48,48,48,-17,-23,-24,48,48,-13,48,48,48,48,48,48,-18,-20,48,48,-19,-21,48,-22,]),'LESS_THAN':([12,27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[20,-54,65,-55,-56,-57,-58,-59,-60,-54,65,65,65,65,65,-51,65,-61,65,65,65,-39,-40,-41,-42,-43,-44,65,-46,-47,65,65,65,65,65,65,-37,-52,-53,-36,65,-38,65,65,65,]),'COMMA':([13,14,15,16,17,18,19,43,44,45,46,47,48,49,82,83,85,88,92,93,94,95,96,97,98,99,100,101,102,103,112,114,115,118,127,],[21,-30,-31,-32,-33,-34,-35,-55,-56,-57,-58,-59,-60,-54,113,-51,113,-61,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-52,-53,-36,-38,]),'GREATER_THAN':([14,15,16,17,18,19,22,27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-30,-31,-32,-33,-34,-35,24,-54,64,-55,-56,-57,-58,-59,-60,-54,64,64,64,64,64,-51,64,-61,64,64,64,-39,-40,-41,-42,-43,-44,64,-46,-47,64,64,64,64,64,64,-37,-52,-53,-36,64,-38,64,64,64,]),'EQUAL':([14,15,16,17,18,19,27,32,43,44,45,46,47,48,49,83,87,88,92,93,94,95,96,97,98,99,100,101,102,103,109,112,114,115,118,127,],[-30,-31,-32,-33,-34,-35,-54,57,-55,-56,-57,-58,-59,-60,-54,-51,116,-61,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,124,-37,-52,-53,-36,-38,]),'SEMI_COLON':([14,15,16,17,18,19,27,32,33,43,44,45,46,47,48,49,50,73,80,83,87,88,89,92,93,94,95,96,97,98,99,100,101,102,103,112,114,115,118,126,127,134,],[-30,-31,-32,-33,-34,-35,-54,56,72,-55,-56,-57,-58,-59,-60,-54,84,104,111,-51,-15,-61,117,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-52,-53,-36,-16,-38,137,]),'LCURLYEBR':([24,],[25,]),'RETURN_ARROW':([24,],[26,]),'RCURLYEBR':([25,29,30,31,55,56,72,104,110,111,117,128,130,136,137,140,],[-11,54,-8,-9,-10,-12,-14,-17,-23,-24,-13,-18,-20,-19,-21,-22,]),'PRINT':([25,31,37,39,56,72,104,110,111,117,120,121,122,128,130,133,136,137,139,140,],[34,34,34,34,-12,-14,-17,-23,-24,-13,34,34,34,-18,-20,34,-19,-21,34,-22,]),'IF':([25,31,37,39,56,72,104,110,111,117,120,121,122,128,130,133,136,137,139,140,],[35,35,35,35,-12,-14,-17,-23,-24,-13,35,35,35,-18,-20,35,-19,-21,35,-22,]),'WHILE':([25,31,37,39,56,72,77,104,110,111,117,120,121,122,128,130,133,136,137,139,140,],[36,36,36,36,-12,-14,108,-17,-23,-24,-13,36,36,36,-18,-20,36,-19,-21,36,-22,]),'DO':([25,31,37,39,56,72,104,110,111,117,120,121,122,128,130,133,136,137,139,140,],[37,37,37,37,-12,-14,-17,-23,-24,-13,37,37,37,-18,-20,37,-19,-21,37,-22,]),'FOR':([25,31,37,39,56,72,104,110,111,117,120,121,122,128,130,133,136,137,139,140,],[38,38,38,38,-12,-14,-17,-23,-24,-13,38,38,38,-18,-20,38,-19,-21,38,-22,]),'BEGIN':([25,31,37,39,56,72,104,110,111,117,120,121,122,128,130,133,136,137,139,140,],[39,39,39,39,-12,-14,-17,-23,-24,-13,39,39,39,-18,-20,39,-19,-21,39,-22,]),'RETURN':([25,31,37,39,56,72,104,110,111,117,120,121,122,128,130,133,136,137,139,140,],[40,40,40,40,-12,-14,-17,-23,-24,-13,40,40,40,-18,-20,40,-19,-21,40,-22,]),'LSQUAREBR':([25,26,27,28,31,32,34,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,131,132,133,135,136,137,138,139,140,],[41,41,-54,41,41,58,41,41,41,41,41,41,-55,-56,-57,-58,-59,-60,-54,58,41,58,-12,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-14,58,41,41,41,58,58,-51,58,-61,58,58,58,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-17,58,58,58,-23,-24,-37,41,-52,-53,41,-13,-36,41,41,41,41,41,41,58,-38,-18,-20,58,58,41,41,-19,-21,58,41,-22,]),'NOT':([25,26,28,31,34,37,39,40,41,42,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,104,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[42,42,42,42,42,42,42,42,42,42,42,-12,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-14,42,42,42,-17,-23,-24,42,42,-13,42,42,42,42,42,42,-18,-20,42,42,-19,-21,42,-22,]),'NUMBER':([25,26,28,31,34,37,39,40,41,42,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,104,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[43,43,43,43,43,43,43,43,43,43,43,-12,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-14,43,43,43,-17,-23,-24,43,43,-13,43,43,43,43,43,43,-18,-20,43,43,-19,-21,43,-22,]),'STRING':([25,26,28,31,34,37,39,40,41,42,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,104,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[44,44,44,44,44,44,44,44,44,44,44,-12,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-14,44,44,44,-17,-23,-24,44,44,-13,44,44,44,44,44,44,-18,-20,44,44,-19,-21,44,-22,]),'MSTRING':([25,26,28,31,34,37,39,40,41,42,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,104,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[45,45,45,45,45,45,45,45,45,45,45,-12,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-14,45,45,45,-17,-23,-24,45,45,-13,45,45,45,45,45,45,-18,-20,45,45,-19,-21,45,-22,]),'TRUE':([25,26,28,31,34,37,39,40,41,42,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,104,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[46,46,46,46,46,46,46,46,46,46,46,-12,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-14,46,46,46,-17,-23,-24,46,46,-13,46,46,46,46,46,46,-18,-20,46,46,-19,-21,46,-22,]),'FALSE':([25,26,28,31,34,37,39,40,41,42,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,104,110,111,113,116,117,119,120,121,122,123,124,128,130,133,135,136,137,139,140,],[47,47,47,47,47,47,47,47,47,47,47,-12,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-14,47,47,47,-17,-23,-24,47,47,-13,47,47,47,47,47,47,-18,-20,47,47,-19,-21,47,-22,]),'QMARK':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,59,-55,-56,-57,-58,-59,-60,-54,59,59,59,59,59,59,59,-61,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-37,-52,-53,-36,59,59,59,59,59,]),'PLUS':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,60,-55,-56,-57,-58,-59,-60,-54,60,60,60,60,60,-51,60,-61,60,60,60,-39,-40,-41,-42,60,60,60,60,60,60,60,60,60,60,60,-37,-52,-53,-36,60,-38,60,60,60,]),'MINUS':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,61,-55,-56,-57,-58,-59,-60,-54,61,61,61,61,61,-51,61,-61,61,61,61,-39,-40,-41,-42,61,61,61,61,61,61,61,61,61,61,61,-37,-52,-53,-36,61,-38,61,61,61,]),'MULTIPLY':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,62,-55,-56,-57,-58,-59,-60,-54,62,62,62,62,62,-51,62,-61,62,62,62,62,62,-41,-42,62,62,62,62,62,62,62,62,62,62,62,-37,-52,-53,-36,62,-38,62,62,62,]),'DIVIDE':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,63,-55,-56,-57,-58,-59,-60,-54,63,63,63,63,63,-51,63,-61,63,63,63,63,63,-41,-42,63,63,63,63,63,63,63,63,63,63,63,-37,-52,-53,-36,63,-38,63,63,63,]),'EQEQ':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,66,-55,-56,-57,-58,-59,-60,-54,66,66,66,66,66,-51,66,-61,66,66,66,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,66,66,66,66,66,-37,-52,-53,-36,66,-38,66,66,66,]),'GTEQ':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,67,-55,-56,-57,-58,-59,-60,-54,67,67,67,67,67,-51,67,-61,67,67,67,-39,-40,-41,-42,-43,-44,67,-46,-47,67,67,67,67,67,67,-37,-52,-53,-36,67,-38,67,67,67,]),'LTEQ':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,68,-55,-56,-57,-58,-59,-60,-54,68,68,68,68,68,-51,68,-61,68,68,68,-39,-40,-41,-42,-43,-44,68,-46,-47,68,68,68,68,68,68,-37,-52,-53,-36,68,-38,68,68,68,]),'NEQ':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,69,-55,-56,-57,-58,-59,-60,-54,69,69,69,69,69,-51,69,-61,69,69,69,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,69,69,69,69,69,-37,-52,-53,-36,69,-38,69,69,69,]),'OR':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,70,-55,-56,-57,-58,-59,-60,-54,70,70,70,70,70,-51,70,-61,70,70,70,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,70,70,70,-37,-52,-53,-36,70,-38,70,70,70,]),'AND':([27,32,43,44,45,46,47,48,49,50,53,73,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,112,114,115,118,126,127,131,132,138,],[-54,71,-55,-56,-57,-58,-59,-60,-54,71,71,71,71,71,-51,71,-61,71,71,71,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,71,-50,71,71,71,-37,-52,-53,-36,71,-38,71,71,71,]),'COLON_COLON':([27,],[52,]),'END':([30,31,39,55,56,72,79,104,110,111,117,128,130,136,137,140,],[-8,-9,-11,-10,-12,-14,110,-17,-23,-24,-13,-18,-20,-19,-21,-22,]),'LDBLBR':([35,],[74,]),'RSQUAREBR':([43,44,45,46,47,48,49,81,82,83,88,90,92,93,94,95,96,97,98,99,100,101,102,103,112,114,115,118,125,127,],[-55,-56,-57,-58,-59,-60,-54,112,-28,-51,-61,118,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-52,-53,-36,-29,-38,]),'COLON':([43,44,45,46,47,48,49,83,88,91,92,93,94,95,96,97,98,99,100,101,102,103,112,114,115,118,127,],[-55,-56,-57,-58,-59,-60,-54,-51,-61,119,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-52,-53,-36,-38,]),'RDBLBR':([43,44,45,46,47,48,49,83,88,92,93,94,95,96,97,98,99,100,101,102,103,105,112,114,115,118,127,],[-55,-56,-57,-58,-59,-60,-54,-51,-61,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,120,-37,-52,-53,-36,-38,]),'TO':([43,44,45,46,47,48,49,83,88,92,93,94,95,96,97,98,99,100,101,102,103,112,114,115,118,127,132,],[-55,-56,-57,-58,-59,-60,-54,-51,-61,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-37,-52,-53,-36,-38,135,]),'ELSE':([56,72,104,110,111,117,128,129,130,136,137,140,],[-12,-14,-17,-23,-24,-13,-18,133,-20,-19,-21,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'func_list':([0,3,],[2,6,]),'func':([0,3,],[3,3,]),'flist':([8,21,],[10,23,]),'type':([11,20,52,],[13,22,87,]),'body':([25,39,],[29,79,]),'stmt_list':([25,31,39,],[30,55,30,]),'stmt':([25,31,37,39,120,121,122,133,139,],[31,31,77,31,128,129,130,136,140,]),'expr':([25,26,28,31,34,37,39,40,41,42,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,113,116,119,120,121,122,123,124,133,135,139,],[32,50,53,32,73,32,32,80,82,83,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,82,126,127,32,32,32,131,132,32,138,32,]),'defvar':([25,31,37,39,120,121,122,133,139,],[33,33,33,33,33,33,33,33,33,]),'clist':([41,51,113,],[81,86,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> func_list','prog',1,'p_prog','grammar.py',33),
  ('func_list -> func','func_list',1,'p_func_list','grammar.py',38),
  ('func_list -> func func_list','func_list',2,'p_func_list','grammar.py',39),
  ('func_list -> <empty>','func_list',0,'p_func_list','grammar.py',40),
  ('func -> FUNK ID LPAREN flist RPAREN LESS_THAN type GREATER_THAN LCURLYEBR body RCURLYEBR','func',11,'p_func_with_body','grammar.py',50),
  ('func -> FUNK ID LPAREN flist RPAREN LESS_THAN type GREATER_THAN RETURN_ARROW expr SEMI_COLON','func',11,'p_func_without_body','grammar.py',63),
  ('func -> error','func',1,'p_func_error','grammar.py',78),
  ('body -> stmt_list','body',1,'p_body','grammar.py',85),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','grammar.py',90),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','grammar.py',91),
  ('stmt_list -> <empty>','stmt_list',0,'p_stmt_list','grammar.py',92),
  ('stmt -> expr SEMI_COLON','stmt',2,'p_stmt_expr','grammar.py',103),
  ('stmt -> expr EQUAL expr SEMI_COLON','stmt',4,'p_stmt_assign','grammar.py',108),
  ('stmt -> defvar SEMI_COLON','stmt',2,'p_stmt_defvar','grammar.py',125),
  ('defvar -> ID COLON_COLON type','defvar',3,'p_defvar','grammar.py',138),
  ('defvar -> ID COLON_COLON type EQUAL expr','defvar',5,'p_defvar','grammar.py',139),
  ('stmt -> PRINT expr SEMI_COLON','stmt',3,'p_stmt_print','grammar.py',150),
  ('stmt -> IF LDBLBR expr RDBLBR stmt','stmt',5,'p_stmt_if','grammar.py',155),
  ('stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','stmt',7,'p_stmt_if_else','grammar.py',164),
  ('stmt -> WHILE LPAREN expr RPAREN stmt','stmt',5,'p_stmt_while','grammar.py',173),
  ('stmt -> DO stmt WHILE LPAREN expr RPAREN SEMI_COLON','stmt',7,'p_stmt_do_while','grammar.py',182),
  ('stmt -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt','stmt',9,'p_stmt_for','grammar.py',191),
  ('stmt -> BEGIN body END','stmt',3,'p_stmt_begin_end','grammar.py',200),
  ('stmt -> RETURN expr SEMI_COLON','stmt',3,'p_stmt_return','grammar.py',205),
  ('flist -> <empty>','flist',0,'p_flist','grammar.py',214),
  ('flist -> ID AS type','flist',3,'p_flist','grammar.py',215),
  ('flist -> ID AS type COMMA flist','flist',5,'p_flist','grammar.py',216),
  ('clist -> expr','clist',1,'p_clist','grammar.py',230),
  ('clist -> expr COMMA clist','clist',3,'p_clist','grammar.py',231),
  ('type -> INT','type',1,'p_type','grammar.py',240),
  ('type -> VECTOR','type',1,'p_type','grammar.py',241),
  ('type -> STR','type',1,'p_type','grammar.py',242),
  ('type -> MSTR','type',1,'p_type','grammar.py',243),
  ('type -> BOOL','type',1,'p_type','grammar.py',244),
  ('type -> NULL','type',1,'p_type','grammar.py',245),
  ('expr -> expr LSQUAREBR expr RSQUAREBR','expr',4,'p_expr_array_indexing','grammar.py',251),
  ('expr -> LSQUAREBR clist RSQUAREBR','expr',3,'p_expr_clist','grammar.py',261),
  ('expr -> expr QMARK expr COLON expr','expr',5,'p_expr_ternary','grammar.py',267),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binary','grammar.py',277),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binary','grammar.py',278),
  ('expr -> expr MULTIPLY expr','expr',3,'p_expr_binary','grammar.py',279),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binary','grammar.py',280),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr_binary','grammar.py',281),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr_binary','grammar.py',282),
  ('expr -> expr EQEQ expr','expr',3,'p_expr_binary','grammar.py',283),
  ('expr -> expr GTEQ expr','expr',3,'p_expr_binary','grammar.py',284),
  ('expr -> expr LTEQ expr','expr',3,'p_expr_binary','grammar.py',285),
  ('expr -> expr NEQ expr','expr',3,'p_expr_binary','grammar.py',286),
  ('expr -> expr OR expr','expr',3,'p_expr_binary','grammar.py',287),
  ('expr -> expr AND expr','expr',3,'p_expr_binary','grammar.py',288),
  ('expr -> NOT expr','expr',2,'p_expr_not','grammar.py',317),
  ('expr -> ID LPAREN expr RPAREN','expr',4,'p_expr_list','grammar.py',325),
  ('expr -> ID LPAREN clist RPAREN','expr',4,'p_expr_func_call','grammar.py',341),
  ('expr -> ID','expr',1,'p_expr_iden','grammar.py',371),
  ('expr -> NUMBER','expr',1,'p_expr_number','grammar.py',384),
  ('expr -> STRING','expr',1,'p_expr_string','grammar.py',390),
  ('expr -> MSTRING','expr',1,'p_expr_string','grammar.py',391),
  ('expr -> TRUE','expr',1,'p_expr_bool','grammar.py',397),
  ('expr -> FALSE','expr',1,'p_expr_bool','grammar.py',398),
  ('expr -> NULL','expr',1,'p_expr_null','grammar.py',404),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','grammar.py',410),
]
